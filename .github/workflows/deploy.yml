name: Create and publish docs

on:
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Python and dependencies
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: pip install --cache-dir ~/.cache/pip -r requirements.txt

      - name: Create docs per model version
        run: |
          for category in modellen/*; do
            if [ -d "$category" ]; then
              for model in "$category"/*; do
                if [ -d "$model" ]; then
                  modelname=$(basename "$model")
                  categoryname=$(basename "$category")
                  for version in "$model"/*; do
                    if [ -d "$version" ]; then
                      versionid=$(basename "$version")
                      echo "Processing $categoryname/$modelname version $versionid"

                      outdir=docs/_modellen/$categoryname/$modelname/$versionid
                      mkdir -p "$outdir"

                      gen-doc \
                        --template-directory templates \
                        -d "$outdir" \
                        "$version/model.yaml"

                      # Remove all .md files except index.md
                      find "$outdir" -type f -name "*.md" ! -name "index.md" -delete

                      # Kopieer bijbehorende SVG indien aanwezig
                      if [ -f "$version/model.drawio.svg" ]; then
                        cp "$version/model.drawio.svg" "$outdir/"
                      fi
                    fi
                  done
                fi
              done
            fi
          done

      - name: Create model landing pages
        run: python scripts/generate_model_landing_pages.py

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1
          bundler-cache: true

      - name: Install Ruby dependencies
        run: |
          bundle config set path 'vendor/bundle'
          bundle install
      
      - name: Build with Jekyll
        run: bundle exec jekyll build -s docs -d _site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
