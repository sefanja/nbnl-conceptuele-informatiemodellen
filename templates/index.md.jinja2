{%- macro key_symbol(class, slot) -%}
    {%- for key in class.unique_keys -%}
        {%- if slot.name in class.unique_keys[key].unique_key_slots -%}
            <span title="Maakt deel uit van de identificatie">⚿</span>&nbsp;
        {%- endif -%}
    {%- endfor -%}
{%- endmacro -%}

{%- macro id_safe(v) -%}
{%- set allowed = 'abcdefghijklmnopqrstuvwxyz0123456789-' -%}
{%- for c in v|lower -%}
    {%- if c in allowed -%}
        {{ c }}
    {%- elif c == ' ' -%}
    -
    {%- endif -%}
{%- endfor -%}
{%- endmacro -%}

{%- macro link(name) -%}
    [{{ name }}](#{{ id_safe(name) }})
{%- endmacro -%}

{%- macro anchor(name) -%}
    <span id="{{ id_safe(name) }}">{{name}}</span>
{%- endmacro -%}

{%- macro range(name) -%}
    {%- set base_types = {
        'string': 'tekst',
        'integer': 'geheel getal',
        'boolean': 'waar of onwaar',
        'float': 'getal',
        'double': 'getal',
        'decimal': 'decimaal getal',
        'time': 'tijd van de dag',
        'date': 'datum',
        'datetime': 'datum en tijd',
        'date_or_datetime': 'datum en eventueel tijd',
        'uriorcurie': 'URI of CURIE',
        'curie': 'CURIE',
        'uri': 'URI',
        'ncname': 'prefixnaam' } -%}
    {%- if name in base_types -%}
        {{ base_types[name] }}
    {%- elif name in schemaview.all_classes() -%}
        {%- set class = schemaview.get_class(name) -%}
        {%- if class.annotations.external_registry -%}
            {{ name }} ({{class.annotations.external_registry.value}})
        {%- else -%}
            {{ link(name) }}
        {%- endif -%}
    {%- else -%}
        {{ link(name) }}
    {%- endif -%}
{%- endmacro -%}

{%- macro compute_range(slot) -%}
    {%- if slot.any_of or slot.exactly_one_of -%}
        {%- for subslot_range in schemaview.slot_range_as_union(slot) | reject('eq', slot.range) -%}
            {%- if slot.exactly_one_of -%}
                {%- if not loop.first -%}
                    &nbsp;
                {%- endif -%}
                óf {{ range(subslot_range) }}
            {%- else -%}
                {{ range(subslot_range) }}
                {%- if not loop.last -%}
                    &nbsp;en/of&nbsp;
                {%- endif -%}
            {%- endif -%}
        {%- endfor -%}
    {%- else -%}
        {{ range(slot.range) }}
    {%- endif -%}
    {%- if slot.unit.ucum_code -%}
        &nbsp;({{ slot.unit.ucum_code }})
    {%- endif -%}
{%- endmacro -%}

{%- macro mappings_line(element, type, label) -%}
    {%- set mappings = schemaview.get_mappings(element.name).get(type, []) -%}
    {%- if mappings -%}
        {%- set linked = [] -%}
        {%- for m in mappings -%}
            {%- set _ = linked.append(gen.uri_link(m)) -%}
        {%- endfor -%}
        {{- label ~ ': ' ~ linked | join(', ') -}}
    {%- endif -%}
{%- endmacro -%}

{% macro omschrijving(element) -%}
    {%- set parts = namespace(items=[]) -%}

    {# NBility #}
    {%- for a in element.annotations -%}
        {%- if a == 'nbility' -%}
            {%- set _ = parts.items.append('NBility: [' ~ element.annotations[a].value ~ '](https://nbility-model.github.io/NBility-business-capabilities-Archi/?view=id-8becf2d90261476faa9d53240e6cf2c8)') -%}
        {%- endif -%}
    {%- endfor -%}

    {# description #}
    {%- if element.description -%}
        {# source #}
        {%- if element.source -%}
            {%- set _ = parts.items.append('_' ~ element.description ~ '_' ~ ' (zie ' ~ gen.uri_link(element.source) ~ ')') -%}
        {%- else -%}
            {%- set _ = parts.items.append('_' ~ element.description ~ '_') -%}
        {%- endif -%}
    {%- endif -%}

    {# meaning #}
    {%- if element.meaning -%}
        {%- set _ = parts.items.append('_' ~ gen.uri_link(element.meaning) ~ '_') -%}
    {%- endif -%}

    {# exact_mappings  #}
    {%- set exact_mappings = mappings_line(element, 'exact', 'Exact overeenkomstig') -%}
    {%- if exact_mappings -%}
        {%- set _ = parts.items.append(exact_mappings) -%}
    {%- endif -%}

    {# close_mappings  #}
    {%- set close_mappings = mappings_line(element, 'close', 'Vrijwel overeenkomstig') -%}
    {%- if close_mappings -%}
        {%- set _ = parts.items.append(element, close_mappings) -%}
    {%- endif -%}

    {# related_mappings  #}
    {%- set related_mappings = mappings_line(element, 'related', 'Gerelateerd') -%}
    {%- if related_mappings -%}
        {%- set _ = parts.items.append(related_mappings) -%}
    {%- endif -%}

    {# narrow_mappings  #}
    {%- set narrow_mappings = mappings_line(element, 'narrow', 'Nauwer') -%}
    {%- if narrow_mappings -%}
        {%- set _ = parts.items.append(narrow_mappings) -%}
    {%- endif -%}

    {# broad_mappings  #}
    {%- set broad_mappings = mappings_line(element, 'broad', 'Breder') -%}
    {%- if broad_mappings -%}
        {%- set _ = parts.items.append(broad_mappings) -%}
    {%- endif -%}

    {# comments #}
    {%- if element.comments -%}
        {%- set _ = parts.items.append(element.comments | join('<br/><br/>')) -%}
    {%- endif -%}

    {# see_also #}
    {%- if element.see_also -%}
        {%- set linked = [] -%}
        {%- for s in element.see_also -%}
            {%- set _ = linked.append(gen.uri_link(s)) -%}
        {%- endfor -%}
        {%- set _ = parts.items.append('Zie ook ' ~ linked | join(', ')) -%}
    {%- endif -%}

    {# tijdlijnen #}
    {%- set tijdlijn_annotaties = [] -%}
    {%- for a in element.annotations -%}
        {%- if a.startswith('tijdlijn_') and element.annotations[a].value|string|lower == "true" -%}
            {%- set _ = tijdlijn_annotaties.append(a.replace('tijdlijn_', '')) -%}
        {%- elif a == 'levensduur' and element.annotations[a].value|string|lower == "true" -%}
            {%- if element.annotations.levensduur_begin and element.annotations.levensduur_einde -%}
                {%- set _ = tijdlijn_annotaties.append(a ~ ' (' ~ element.annotations.levensduur_begin.value ~ ', ' ~ element.annotations.levensduur_einde.value ~ ')') -%}
            {%- else -%}
                {%- set _ = tijdlijn_annotaties.append(a) -%}
            {%- endif -%}
        {%- endif -%}
    {%- endfor -%}
    {%- if tijdlijn_annotaties -%}
        {%- set _ = parts.items.append('Tijdlijnen: ' ~ tijdlijn_annotaties|join(', ')) -%}
    {%- endif -%}

    {{ parts.items | join('<br/><br/>') }}
{%- endmacro -%}

---
title: "v{{ schema.version }}"
parent: "{% if schema.title %}{{ schema.title }}{% else %}{{ schema.name }}{% endif %}"
---

{: .warning }
Deze website is in opbouw. Pagina's kunnen onvolledige of onjuiste informatie bevatten.

# {% if schema.title %}{{ schema.title }}{% else %}{{ schema.name }}{% endif %}
{{ '{: .no_toc }' }}

{{ omschrijving(schema) }}

## Inhoud
{{ '{: .no_toc .text-delta }' }}
1. TOC
{{ '{:toc}' }}

---

{% if include_top_level_diagram %}
{# Diagramgeneratoren werken niet goed, dus uitgezet #}
{# ```{{ gen.mermaid_directive() }}
{{ gen.mermaid_diagram() }}
``` #}
{% else %}
![Diagram](model.drawio.svg)

<details>
<summary>Legenda</summary>
<a href="https://sefanja.github.io/nbnl-conceptuele-informatiemodellen/wegwijs.html">Wegwijs in de modellen</a>
</details>
{% endif %}

{% for class in gen.all_class_objects() | sort(attribute=sort_by) %}
{% if class.name != 'Any' and not class.annotations.external_registry %}

## {{class.name}}

{% if class.is_a %}
Specialisatie van {{link(schemaview.get_class(class.is_a).name)}}
{% endif %}

{{omschrijving(class)}}

{% set properties = [] %}
{% set relationships = [] %}
{% for slot in gen.get_direct_slots(class) | sort(attribute=sort_by) %}
    {% set ranges = schemaview.slot_range_as_union(slot) %}
    {% set some_are_classes = ranges | select('in', schemaview.all_classes()) | list | length > 0 %}
    {% if some_are_classes %}
        {% set _ = relationships.append(slot) %}
    {% else %}
        {% set _ = properties.append(slot) %}
    {% endif %}
{% endfor %}

{% if properties %}
### Eigenschappen
{{ '{: .no_toc }' }}

| Eigenschap | Waardespecificatie | Omschrijving |
| :---  | :--- | :--- |
{% for slot in properties -%}
| {{key_symbol(class, slot)}}{{slot.name}} {{is_unique_key_slot}} | {{compute_range(slot)}}<br/>_{{gen.cardinality(slot)}}_ | {{omschrijving(slot)}} |
{% endfor %}
{% endif %}

{% if relationships %}
### Relaties
{{ '{: .no_toc }' }}

| {{class.name}} is ... | Omschrijving |
| :---  | :--- |
{% for slot in relationships -%}
| {{key_symbol(class, slot)}}{{slot.name}} {{compute_range(slot)}}<br/>_{% if slot.annotations.inverse_cardinality %}{{slot.annotations.inverse_cardinality.value }}{% endif %} → {{ gen.cardinality(slot) }}_ | {{omschrijving(slot)}} |
{% endfor %}
{% endif %}

{% endif %}
{% endfor %}

# Waardesoorten en waardelijsten
{{ '{: .no_toc }' }}

{% for t in gen.all_type_objects() | sort(attribute=sort_by) -%}
{% if loop.first %}
### Waardesoorten
{{ '{: .no_toc }' }}

| Waardesoort | Omschrijving | Gebaseerd op | Patroon |
| :--- | :--- | :--- | :--- |
{% endif -%}
| {{anchor(t.name)}} | {{omschrijving(t)}} | {% if t.typeof %}{{link(t.typeof)}}{% else %}{{range(t.base)}}{% endif %} | {% if t.pattern %}`{{t.pattern}}`{% endif %} |
{% endfor %}

{% for e in gen.all_enum_objects() | sort(attribute=sort_by) %}
{% if loop.first %}
### Waardelijsten
{{ '{: .no_toc }' }}
{% endif %}

#### {{anchor(e.name)}}
{{ '{: .no_toc }' }}

{{omschrijving(e)}}

| Waarde | Omschrijving |
| :--- | :--- |
{% if e.permissible_values -%}
{% for pv in e.permissible_values.values() | sort(attribute='text') -%}
| {{anchor(pv.text)}} | {{omschrijving(pv)}} |
{% endfor -%}
{% else -%}
| {{e.name}} | _dynamisch_ |  |
{% endif -%}

{% endfor %}
